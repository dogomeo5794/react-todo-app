{"version":3,"sources":["Components/TodoInput.js","Components/TodoItem.js","Components/TodoList.js","Pages/About.js","Pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","this","props","item","editItem","handleChange","handleSubmit","cancelUpdate","errors","className","onSubmit","id","type","placeholder","value","onChange","autoFocus","noValue","onClick","Component","TodoItem","title","handleUpdate","handleDelete","TodoList","items","clearList","duration","easing","map","key","e","About","Contact","App","state","uuidv4","test","target","setState","preventDefault","hasError","document","querySelector","focus","list","newItem","error","tempItem","filter","selectedItem","find","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.70734bf8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class TodoInput extends Component {\r\n    render() {\r\n        const { item, editItem, handleChange, handleSubmit, cancelUpdate, errors } = this.props;\r\n        return (\r\n            <div className=\"card card-body\">\r\n                <form onSubmit = {handleSubmit}>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text bg-primary text-white\" id=\"basic-addon1\">\r\n                                <i className=\"fa fa-book\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <input type=\"text\" id=\"todoInput\" className=\"form-control text-capitalize\" placeholder=\"Add Todo\"\r\n                            value = {item}\r\n                            onChange = {handleChange}\r\n                            autoFocus={true}\r\n                        />\r\n                    </div>\r\n                    { errors.noValue &&\r\n                        <small><i className=\"text-danger ml-5\">{errors.noValue}</i></small>\r\n                    }\r\n\r\n                    <div className=\"row mt-3\">\r\n                        <div className={ editItem ? 'col-8': 'col-12' }>\r\n                            <button type=\"submit\" className={`${editItem ? 'btn-success' : 'btn-primary'} btn btn-block`}>\r\n                                { editItem ? 'Save Changes': 'Add Item' }\r\n                            </button>\r\n                        </div>\r\n                        { editItem ?\r\n                            <div className=\"col-4\">\r\n                                <button type=\"button\" className=\"btn-danger btn btn-block\" onClick = {cancelUpdate}>\r\n                                    Cancel\r\n                                </button>\r\n                            </div>\r\n                            : ''\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoInput\r\n","import React, { Component } from 'react'\r\n\r\nexport class TodoItem extends Component {\r\n    render() {\r\n        const { title, handleUpdate, handleDelete } = this.props;\r\n        return (\r\n            <li className=\"list-group-item d-flex justify-content-between my-2 align-items-center text-capitalize\">\r\n                <h6>{title}</h6>\r\n                <div className=\"todo-icon\">\r\n                    <span className=\"mx-2 text-success\" onClick = {handleUpdate}>\r\n                        <i className=\"fa fa-pencil\" ></i>\r\n                    </span>\r\n\r\n                    <span className=\"mx-2 text-danger\" onClick = {handleDelete}>\r\n                        <i className=\"fa fa-trash\" ></i>\r\n                    </span>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem\r\n","import React, { Component } from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport FlipMove from 'react-flip-move'\r\n\r\nexport class TodoList extends Component {\r\n    render() {\r\n        const { items, clearList, handleDelete, handleUpdate } = this.props;\r\n        return (\r\n\r\n            <ul className=\"list-group my-5\">\r\n                <h3 className=\"text-capitalize text-center\">Todo List</h3>\r\n                <FlipMove duration={300} easing=\"ease-in-out\" >\r\n                {\r\n                    items.map(item => {\r\n                        return <TodoItem\r\n                            key = {item.key}\r\n                            title = {item.title}\r\n                            handleUpdate = {(e) => handleUpdate(e, item.key)}\r\n                            handleDelete = {(e) => handleDelete(e, item.key)}\r\n                        />\r\n                    })\r\n                }\r\n                </FlipMove>\r\n\r\n                <button className=\"btn btn-primary btn-danger btn-block mt-3\" onClick = {clearList}>Clear</button>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList\r\n","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>About</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\n\r\nexport class Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Contact</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact\r\n","import React, { Component } from 'react';\nimport TodoInput from './Components/TodoInput'\nimport TodoList from './Components/TodoList'\n\nimport About from './Pages/About'\nimport Contact from './Pages/Contact'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import uuid from 'uuid/v4'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\n\nclass App extends Component {\n  state = {\n    items: [],\n    id: uuidv4(),\n    item: '',\n    editItem: false,\n    errors: []\n  }\n\n  handleChange = e => {\n    if(/^\\s/.test(e.target.value)) {\n      e.target.value = '';\n      return false;\n    }\n    \n    this.setState( {\n        errors: [],\n        item: e.target.value\n    } )\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { id, item, items, editItem } = this.state;\n\n    if ( !item ) {\n      //alert('Empty value')\n      this.hasError( {\n          noValue: 'Required field!'\n      } );\n      document.querySelector(\"#todoInput\").focus()\n      return false;\n    }\n\n    if ( editItem ) {\n      items.map( list => {\n        if ( list.key === id ) {\n          list.title = item\n        }\n\n        return list\n      })\n\n      this.setState( {\n        editItem: false,\n        item: '',\n        id: uuidv4()\n      } )\n\n      return false;\n    }\n\n    const newItem = {\n      key: id,\n      title: item\n    }\n\n    this.setState( {\n      items: [...items, newItem],\n      item: '',\n      id: uuidv4(),\n      editItem: false\n    } )\n    \n  }\n\n  clearList = e => {\n    e.preventDefault();\n    this.setState( {\n      items: []\n    } )\n  }\n\n  cancelUpdate = e => {\n    e.preventDefault();\n    this.setState( {\n      item: '',\n      editItem: false,\n      id: uuidv4()\n    } )\n  }\n\n  hasError = (error) => {\n    this.setState({\n        errors: error\n    })\n  }\n\n  handleDelete = (e, id) => {\n    const { items } = this.state;\n    const tempItem = items.filter( item => item.key !== id );\n    this.setState( {\n      items: tempItem\n    } )\n  }\n\n  handleUpdate = (e, id) => {\n    const { items } = this.state;\n    //const tempItem = items.filter( item => item.key !== id );\n    const selectedItem = items.find( item => item.key === id );\n    this.setState( {\n      //items: tempItem,\n      item: selectedItem.title,\n      editItem: true,\n      id: id\n    } )\n\n  }\n\n\n\n  render () {\n    return (\n      <div className=\"container\">\n        \n\n        <Router>\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\n                <Link to = '#' className=\"navbar-brand\">\n                    Navbar\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        \n                        <li className=\"nav-item active\">\n                            <Link to = '/' className=\"nav-link\">\n                                Todo App\n                                <span className=\"sr-only\">(current)</span>\n                            </Link>\n                        </li>\n                        \n                        <li className=\"nav-item\">\n                            <Link to = '/about' className=\"nav-link\">\n                                About\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link to = '/contact' className=\"nav-link\">\n                                Contact\n                            </Link>\n                        </li>\n\n                    </ul>\n                </div>\n            </nav>\n        \n            <Switch>\n                <Route path='/' exact>\n                    <div className=\"row\">\n                        <div className=\"col-10 mx-auto col-md-7 mt-2\">\n                        <h1 className=\"text-capitalize text-center\">Todo App</h1>\n                        <TodoInput\n                            item = {this.state.item}\n                            editItem = {this.state.editItem}\n                            handleChange = {this.handleChange}\n                            handleSubmit = {this.handleSubmit}\n                            cancelUpdate = {this.cancelUpdate}\n                            errors = {this.state.errors}\n                        />\n                        <TodoList\n                            items = {this.state.items}\n                            clearList = {this.clearList}\n                            handleDelete = {this.handleDelete}\n                            handleUpdate = {this.handleUpdate}\n                        />\n                        </div>\n                    </div>\n                </Route>\n                <Route path='/contact' component = {Contact} />\n                <Route path='/about' component = {About} />\n            </Switch>\n        </Router>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}